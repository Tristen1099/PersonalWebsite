$colorTextLight: #9dff9d;
$colorTextDark: #081a02;
$colorTextShadow: #21881e;
$colorScrollBar: #20880e;
$colorContainerBackgroundLight: #849a84;
$colorContainerBackground: #707b70;
$colorContainerBackgroundDark: #166024;
$colorContainerInputBackground: #6c9d6c;
$colorContainerShadowLight: #64855c;
$colorContainerShadowDark: #2a3e25;
$colorContainerInnerBorder: #687668;
$colorContainerIconLight: #4a974a;
$colorContainerIconDark: #114711;
$colorContainerButtonVeryLight: #98ff9c;
$colorContainerButtonLight: #4caf50;
$colorContainerButtonDark: #3e593e;
$colorContainerButtonBorder: #38a123;
$colorContainerBorderLight: #588051;
$colorContainerBorderDark: #2c5d23;


@mixin componentHeader($color: black) {
    text-align: center;
    font-family: monospace;
    font-weight: 600;
    font-size: 3.5em;
    color: $color;
}

@mixin componentHeaderIcon($color: $colorContainerIconDark) {
    font-size: 0.7em;
    color: $color;
    margin: 0.5em;
}

@mixin articleContainer() {
    width: 60%;
    background-color: $colorContainerBackgroundLight;
    border-color: $colorContainerBorderLight $colorContainerBorderDark $colorContainerBorderDark $colorContainerBorderLight;
    border-width: 1px;
    border-style: solid;
    border-radius: 1em;
    padding: 2em;
    margin: 0 auto;
    box-shadow: 0.5em 0.2em 1em 0.3em $colorContainerShadowLight;
    transition: transform 2s ease;

    article:last-of-type {
        margin: 0;
    }
}

@mixin articleContent() {
    padding: 2em 0;
    border-width: 1px 0 1px 0;
    border-color: $colorContainerInnerBorder;
    border-style: solid;
    margin-bottom: 1em;
    transition: transform 0.4s ease;
}

@mixin articleParagraph() {
    margin: 0.5em 0;
    font-weight: 700;
}

@mixin articleSubDetails() {
    margin: 0;
    font-style: italic;
    font-weight: 600;
}

@mixin articleHover() {
    transform: scale(1.04);

    .fas {
        color: $colorContainerIconDark;
    }
}

@mixin windowOverLay() {
    position: fixed;
    display: none;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6);
    z-index: 2;

    #text {
        text-align: center;
        background-color: $colorContainerBackgroundDark;
        padding: 1em;
        border-radius: 0.5em;
        position: absolute;
        top: 50%;
        left: 50%;
        font-size: 50px;
        color: white;
        transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);

        h2 {
            border-width: 0 0 1px 0;
            border-color: white;
            border-style: solid;
        }

        button {
            color: white;
            width: 30%;
            background-color: $colorContainerButtonDark;
            border-color: black;
            border-radius: 5px;
            position: relative;
            vertical-align: middle;
            height: 40px;
            p {
                font-size: 0.5em;
            }
        }
    }
}

@mixin bottomInfoButton($left: unset, $right: unset) {
    position: fixed;
    left: $left;
    right: $right;
    bottom: 50px;
    -webkit-transition: all 0.2s ease-in 0s;
    transition: all 0.2s ease-in 0s;
    z-index: 9999;
    cursor: pointer;
    width: 5em;
    height: 5em;
    background-color: $colorContainerButtonLight;
    border-radius: 2em;
    animation-name: wobble;
    animation-duration: 6s;
    animation-iteration-count: infinite;
    box-shadow: 0.01em 0.01em 1em 0.01em $colorContainerShadowLight;
    opacity: 0;
    display: none;
}

@mixin bottomInfoButtonIcon() {
    background-size: cover;
    width: 5em;
    height: 5em;
    padding: 0.5em;
    transition: 0.3s;
}

@keyframes wobble {
    0% {
        transform: translateX(0%);
    }
    5% {
        transform: translateX(0%);
    }
    10% {
        transform: translateX(0%);
    }
    15% {
        transform: translateX(-20%) rotate(-5deg);
    }
    30% {
        transform: translateX(15%) rotate(3deg);
    }
    45% {
        transform: translateX(-10%) rotate(-3deg);
    }
    60% {
        transform: translateX(5%) rotate(2deg);
    }
    75% {
        transform: translateX(-2%) rotate(-1deg);
    }
    100% {
        transform: translateX(0%);
    }
}
